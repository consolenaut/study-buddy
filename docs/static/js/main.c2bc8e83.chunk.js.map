{"version":3,"sources":["logo.svg","utils/getQuestion.js","utils/readText.js","ChatBot.jsx","App.js","reportWebVitals.js","index.js"],"names":["fetchAQuestion","a","subjectId","examSpecId","topicIds","myHeaders","Headers","append","inputBody","returnResults","questions","console","log","requestOptions","method","headers","redirect","body","JSON","stringify","fetch","response","json","parsedResponse","nextQuestion","fetchAndPlay","text","context","AudioContext","then","arrayBuffer","decodeAudioData","audioBuffer","source","createBufferSource","buffer","connect","destination","start","play","catch","error","forceRenderMain","quizSubjectText","quizSubjectId","quizSpecId","quizTopicId","quizNumberOfQuestions","quizAnsweredQuestions","quizAnsweredQuestionsCorrect","quizAnswers","quizCorrectAnswer","showConfetti","showStudyGuide","StyledIframe","styled","iframe","props","hidden","GifBackground","div","Loading","h2","StyledQuestion","h3","ReadToMeLink","StyledButton","button","StyledUL","ul","StyledLI","li","GuideFound","triggerNextStep","previousStep","guideSubjectId","value","guideSpecId","guideTopicId","useEffect","studyGuideId","trigger","GuideFoundQuiz","StoreQuizSubject","label","QuizStoreQuestions","QuizReady","QuizReadyAgain","QuizQuestion","quizReadToMe","useState","question","setQuestion","options","find","option","isCorrect","qindex","reduce","acc","currentIndex","length","onClick","map","topicId","id","timeSpent","QuizQuestionCorrect","push","QuizQuestionIncorrect","QuizEnd","QuizCelebratePlay","setTimeout","chatbotConfig","width","height","floating","headerTitle","theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","steps","message","user","component","waitAction","delay","validator","isNaN","asMessage","useWindowSize","React","updateState","useCallback","src","App","className","logo","alt","href","target","rel","ChatBot","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2bc8e83.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"./static/media/logo.6ce24c58.svg\";","const QUIZ_API_KEY = \"ia3NrJsgwehrf4WaYFJk62pWA8wUL0w5AlS2RRob\";\n\nexport const fetchAQuestion = async ({ subjectId, examSpecId, topicIds }) => {\n\tvar myHeaders = new Headers();\n\tmyHeaders.append(\"x-api-key\", QUIZ_API_KEY);\n\tmyHeaders.append(\"Accept\", \"application/json\");\n\tmyHeaders.append(\"Content-Type\", \"application/json\");\n\n\tvar inputBody = {\n    subjectId,\n    examSpecId,\n    topicIds,\n    returnResults: true,\n    questions: []\n  };\n\tconsole.log(\"inputBody:\",inputBody)\n\n\tvar requestOptions = {\n\t\tmethod: 'POST',\n\t\theaders: myHeaders,\n\t\tredirect: 'follow',\n\t\tbody: JSON.stringify(inputBody)\n\t};\n\n  const response = await fetch(\"https://cors-anywhere.herokuapp.com/https://bitesize.test.api.bbci.co.uk/quizzes\", requestOptions);\n  const parsedResponse = await response.json();\n  return parsedResponse.nextQuestion;\n}","const beeb_api_key = \"iS1m7L8tLU6ch6Bv42jta2UrPhmmzUl835Cnj5YU\";\n\nexport const fetchAndPlay = text => {\n  const context = new AudioContext();\n\n  const play = audioBuffer => {\n    const source = context.createBufferSource();\n    source.buffer = audioBuffer;\n    source.connect(context.destination);\n    source.start();\n  }\n\n\tvar myHeaders = new Headers();\n\tmyHeaders.append(\"x-api-key\", beeb_api_key);\n\tmyHeaders.append(\"Accept\", \"audio/mpeg\");\n\tmyHeaders.append(\"Content-Type\", \"application/json\");\n\n\tvar inputBody = '{\"text\":\"'+ text + '\"}';\n\n\tvar requestOptions = {\n\t\tmethod: 'POST',\n\t\theaders: myHeaders,\n\t\tredirect: 'follow',\n\t\tbody: inputBody\n\t};\n\n\tfetch(\"https://cors-anywhere.herokuapp.com/https://7xbnbo3f67.execute-api.eu-west-1.amazonaws.com/test/text\", requestOptions)\n\t\t.then(response => response.arrayBuffer())\n\t\t.then(arrayBuffer => context.decodeAudioData(arrayBuffer))\n\t\t.then(audioBuffer => {\n      play(audioBuffer)\n    })\n\t\t.catch(error => console.log('error', error));\n}","import React, { useEffect, useState } from \"react\";\nimport ChatBot from \"react-simple-chatbot\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { fetchAQuestion } from \"./utils/getQuestion\";\nimport { fetchAndPlay } from \"./utils/readText\";\n\nimport useWindowSize from 'react-use/lib/useWindowSize'\nimport Confetti from 'react-confetti'\n\n\nlet quizSubjectText = '';\nlet quizSubjectId = '';\nlet quizSpecId = '';\nlet quizTopicId = '';\nlet quizNumberOfQuestions = 0;\nlet quizAnsweredQuestions = 0;\nlet quizAnsweredQuestionsIncorrect = 0;\nlet quizAnsweredQuestionsCorrect = 0;\nlet quizAnswers = [];\nlet quizCorrectAnswer = '';\nlet showConfetti = false;\nlet showStudyGuide = false;\nlet forceRenderMain;\n\nconst StyledIframe = styled.iframe`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: #fff;\n  display: ${(props) => props.hidden ? 'none' : 'block'};\n`\nconst GifBackground = styled.div`\n  width: 100%;\n  height: 400px;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-color: #f00;\n  background-image: url(\"https://media2.giphy.com/media/3oz8xPJ7Uwbbee7E9a/giphy.gif\");\n`;\n\nconst Loading = styled.h2`\n  color: #bbb;\n  text-align: center;\n  padding: 12px;\n  padding-bottom: 0;\n`;\n\nconst StyledQuestion = styled.h3`\n  color: #DD6713;\n  text-align: center;\n  padding: 12px;\n  padding-bottom: 0;\n`;\n\nconst ReadToMeLink = styled.a`\n  color: #DD6713;\n  text-align: center;\n  display: block;\n  padding: 12px;\n  padding-top: 0;\n  text-decoration: underline;\n`;\n\nconst StyledButton = styled.button`\n  background: #DD6713;  \n  border: 0;\n  border-radius: 22px;\n  box-shadow: 0 1px 2px 0 rgba(0,0,0,0.15);\n  color: #fff;\n  display: inline-block;\n  font-size: 14px;\n  padding: 12px;\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nconst StyledUL = styled.ul`\n  margin: 2px 0 12px 0;\n  padding: 0 6px;\n  text-align: center;\n`;\n\nconst StyledLI = styled.li`\n  animation: gZmgDU 0.3s ease forwards;\n  cursor: pointer;\n  display: inline-block;\n  margin: 2px;\n  transform: scale(0);\n`;\n\nconst GuideFound = ({ triggerNextStep, previousStep }) => {\n  // 1 = bio, 2 = chem, 3 = phys                \n  const idToSubjectId = [\"z9ddmp3\", \"zs6hvcw\", \"zpm6fg8\"];\n  const idToSpecId = [\"z2synbk\", \"z8xtmnb\", \"zyvnxfr\"];\n  const idToTopicId = [\"z22btv4\", \"z34kgdm\", \"zcp6qhv\"];\n  const guideSubjectId = idToSubjectId[previousStep.value - 1];\n  const guideSpecId = idToSpecId[previousStep.value - 1];\n  const guideTopicId = idToTopicId[previousStep.value - 1];\n  useEffect(() => {\n    fetchAQuestion({ subjectId: guideSubjectId, examSpecId: guideSpecId, topicIds: [guideTopicId] }).then(response => {\n      console.log(response.studyGuideId);\n      showStudyGuide = `https://www.bbc.co.uk/bitesize/guides/${response.studyGuideId}/revision/1`;\n      forceRenderMain();\n      triggerNextStep({ trigger: \"GuideDoQuiz\" });\n    })\n  }, []);\n  return null;\n}\n\nconst GuideFoundQuiz = ({ triggerNextStep }) => {\n  useEffect(() => {\n    fetchAQuestion({ subjectId: quizSubjectId, examSpecId: quizSpecId, topicIds: [quizTopicId] }).then(response => {\n      console.log(response.studyGuideId);\n      showStudyGuide = `https://www.bbc.co.uk/bitesize/guides/${response.studyGuideId}/revision/1`;\n      forceRenderMain();\n      triggerNextStep({ trigger: \"QuizReady\" });\n    })\n  }, []);\n  return null;\n}\n\nconst StoreQuizSubject = ({ previousStep }) => {\n  // 1 = bio, 2 = chem, 3 = phys                \n  const idToSubjectId = [\"z9ddmp3\", \"zs6hvcw\", \"zpm6fg8\"];\n  const idToSpecId = [\"z2synbk\", \"z8xtmnb\", \"zyvnxfr\"];\n  const idToTopicId = [\"z22btv4\", \"z34kgdm\", \"zcp6qhv\"];\n  quizSubjectText = previousStep.label;\n  quizSubjectId = idToSubjectId[previousStep.value - 1];\n  quizSpecId = idToSpecId[previousStep.value - 1];\n  quizTopicId = idToTopicId[previousStep.value - 1];\n  return null;\n}\n\nconst QuizStoreQuestions = ({ previousStep }) => {\n  useEffect(() => {\n    quizNumberOfQuestions = previousStep.value;\n    quizAnsweredQuestions = 0;\n    quizAnsweredQuestionsCorrect = 0;\n    quizAnsweredQuestionsIncorrect = 0;\n    quizAnswers = [];\n  }, []);\n  return null;\n}\n\nconst QuizReady = () => {\n  return `Alright, ${quizNumberOfQuestions} questions on ${quizSubjectText}, got it. I've put the study guide for this quiz on your screen. Ready?`;\n}\n\nconst QuizReadyAgain = () => {\n  useEffect(() => {\n    quizAnsweredQuestions = 0;\n    quizAnsweredQuestionsCorrect = 0;\n    quizAnsweredQuestionsIncorrect = 0;\n    quizAnswers = [];\n  }, []);\n  return `Alright, ${quizNumberOfQuestions} questions on ${quizSubjectText}, got it. I've put the study guide for this quiz on your screen. Ready?`;\n}\n\nconst QuizQuestion = ({ triggerNextStep }) => {\n  let quizReadToMe;\n  const [question, setQuestion] = useState();\n  useEffect(() => {\n    if (quizNumberOfQuestions !== quizAnsweredQuestions) {\n      fetchAQuestion({ subjectId: quizSubjectId, examSpecId: quizSpecId, topicIds: [quizTopicId] }).then(response => {\n        setQuestion(response);\n      })\n    }\n    if (quizAnsweredQuestions >= quizNumberOfQuestions) { triggerNextStep({ trigger: \"QuizEnd\" }) }\n  }, []);\n  useEffect(() => {\n    if (question && quizNumberOfQuestions !== quizAnsweredQuestions) {\n      quizCorrectAnswer = question.options.find(option => option.isCorrect).text;\n      const qindex = [\"A\", \"B\", \"C\"];\n      quizReadToMe = `${question.text}. ${question.options.reduce((acc, option, currentIndex) => acc + `. ${currentIndex === 0 ? 'Is it' : ''} ${currentIndex === question.options.length-1 ? 'Or' : ''} ${qindex[currentIndex]}. ${option.text}`, '')}`;\n    }\n  }, [question]);\n\n  console.log(\"Progress: \", quizNumberOfQuestions, quizAnsweredQuestions)\n  if (quizAnsweredQuestions >= quizNumberOfQuestions) return null\n  if (question) return (\n    <div>\n      <StyledQuestion>{question.text}</StyledQuestion>\n      <ReadToMeLink onClick={() => fetchAndPlay(quizReadToMe)}>Read this question to me</ReadToMeLink>\n      <StyledUL>\n        {question.options.map(option => (\n          <StyledLI>\n            <StyledButton onClick={() => triggerNextStep({ \n              value: { studyGuideId: question.studyGuideId, topicId: question.topicId, id: question.id, isCorrect: option.isCorrect, timeSpent: 4000 },\n              trigger: option.isCorrect ? 'QuizQuestionCorrect' : 'QuizQuestionIncorrect'\n            })}>\n              {option.text}\n            </StyledButton>\n          </StyledLI>\n        ))}\n      </StyledUL>\n    </div>\n  );\n  return <Loading>...</Loading>;\n}\n\nconst QuizQuestionCorrect = ({ triggerNextStep, previousStep }) => {\n  useEffect(() => {\n    console.log(\"CORRECT EFFECT CALLED\", quizAnsweredQuestions);\n    quizAnsweredQuestions = quizAnsweredQuestions+1;\n    quizAnsweredQuestionsCorrect = quizAnsweredQuestionsCorrect+1;\n    console.log(\"CORRECT EFFECT CALLED\", quizAnsweredQuestions);\n    quizAnswers.push(previousStep.value);\n    triggerNextStep({ trigger: \"QuizQuestion\" });\n  }, []);\n  return `Spot on!`;\n}\n\nconst QuizQuestionIncorrect = ({ triggerNextStep, previousStep }) => {\n  useEffect(() => {\n    console.log(\"INCORRECT EFFECT CALLED\", quizAnsweredQuestions);\n    quizAnsweredQuestions = quizAnsweredQuestions+1;\n    quizAnsweredQuestionsIncorrect = quizAnsweredQuestionsIncorrect+1;\n    console.log(\"INCORRECT EFFECT CALLED\", quizAnsweredQuestions);\n    quizAnswers.push(previousStep.value);\n    triggerNextStep({ trigger: \"QuizQuestion\" });\n  }, []);\n  return `Not quite, the correct answer is ${quizCorrectAnswer}`;\n}\n\nconst QuizEnd = () => {\n  return `And we're done! You got ${quizAnsweredQuestionsCorrect} out of ${quizAnsweredQuestions} answers right!`;\n}\n\nconst QuizCelebratePlay = () => {\n  useEffect(() => {\n    showConfetti = true;\n    forceRenderMain();\n    setTimeout(() => { showConfetti = false; forceRenderMain(); }, 5000);\n  }, []);\n  return <GifBackground />\n}\n\n\nconst chatbotConfig = {\n  width: \"400px\",\n  height: \"600px\",\n  floating: true,\n  headerTitle: \"Study Buddy\"\n};\n\nconst theme = {\n  background: \"white\",\n  fontFamily: \"Arial, Helvetica, sans-serif\",\n  headerBgColor: \"#DD6713\",\n  headerFontColor: \"#fff\",\n  headerFontSize: \"15px\",\n  botBubbleColor: \"#DD6713\",\n  botFontColor: \"#fff\",\n  userBubbleColor: \"#f8f8f8\",\n  userFontColor: \"#000\"\n};\n\nconst guideSteps = [\n  {\n    id: 'GuideWhatAreYouStudying',\n    message: 'Got it, what are you studying?',\n    trigger: 'GuideWhatAreYouStudyingOptions',\n  },\n  {\n    id: 'GuideWhatAreYouStudyingOptions',\n    options: [\n      { value: 1, label: 'Biology', trigger: 'GuideFound' },\n      { value: 2, label: 'Chemistry', trigger: 'GuideFound' },\n      { value: 3, label: 'Physics', trigger: 'GuideFound' },\n    ],\n  },\n  {\n    id: 'GuideFound',\n    component: <GuideFound />,\n    waitAction: true,\n  },\n  {\n    id: 'GuideDoQuiz',\n    message: 'Great, here\\'s your study guide, d\\'you want to do a couple of practice questions to help you revise?',\n    trigger: 'GuideDoQuizOptions',\n  },\n  {\n    id: 'GuideDoQuizOptions',\n    options: [\n      { value: 1, label: 'Yes', trigger: 'GuideQuestionsYesAnswer' },\n      { value: 2, label: 'No', trigger: 'GuideQuestionsNoAnswer' }\n    ],\n  },\n  {\n    id: 'GuideQuestionsNoAnswer',\n    message: 'No worries, let me know if you need anything else!',\n    delay: 3000,\n    trigger: 'WhatToDoNowQuestion',\n  },\n  {\n    id: 'GuideQuestionsYesAnswer',\n    message: 'Alright, we\\ll do 5 quick questions to get you warmed up, ready?',\n    trigger: 'GuideQuestionsYesAnswerOptions',\n  },\n  {\n    id: 'GuideQuestionsYesAnswerOptions',\n    options: [\n      { value: 1, label: 'Lets go!', trigger: 'QuizQuestion' },\n    ],\n  },\n]\n\nconst quizSteps = [\n  {\n    id: 'QuizWhatAreYouStudying',\n    message: 'Got it, what are you studying?',\n    trigger: 'QuizWhatAreYouStudyingOptions',\n  },\n  {\n    id: 'QuizWhatAreYouStudyingOptions',\n    options: [\n      { value: 1, label: 'Biology', trigger: 'QuizStoreTopic' },\n      { value: 2, label: 'Chemistry', trigger: 'QuizStoreTopic' },\n      { value: 3, label: 'Physics', trigger: 'QuizStoreTopic' },\n    ],\n  },\n  {\n    id: 'QuizStoreTopic',\n    component: <StoreQuizSubject />,\n    trigger: 'QuizHowManyQuestions',\n  },\n  {\n    id: 'QuizHowManyQuestions',\n    message: 'Perfect, how many questions should we do? (Hint: type your answer below)',\n    trigger: 'QuizHowManyQuestionsResponse'\n  },\n  {\n    id: 'QuizHowManyQuestionsResponse',\n    user: true,\n    trigger: 'QuizStoreQuestions',\n    validator: (value) => {\n      if (isNaN(value)) { return 'Answer should be a number';}\n      return true;\n    },\n  },\n  {\n    id: 'QuizStoreQuestions',\n    component: <QuizStoreQuestions />,\n    trigger: 'GuideFoundQuiz',\n  },\n  {\n    id: 'GuideFoundQuiz',\n    component: <GuideFoundQuiz />,\n    waitAction: true,\n  },\n  {\n    id: 'QuizReady',\n    component: <QuizReady />,\n    asMessage: true,\n    trigger: 'QuizReadyOptions',\n  },\n  {\n    id: 'QuizReadyAgain',\n    component: <QuizReadyAgain />,\n    asMessage: true,\n    trigger: 'QuizReadyOptions',\n  },\n  {\n    id: 'QuizReadyOptions',\n    options: [\n      { value: 1, label: 'As I\\'ll ever be!', trigger: 'QuizQuestion' },\n    ],\n  },\n  {\n    id: 'QuizQuestion',\n    component: <QuizQuestion />,\n    waitAction: true,\n  },\n  {\n    id: 'NextQuestion',\n    message: \"Next question:\",\n    delay: 5000,\n    trigger: 'QuizQuestion',\n  },\n  {\n    id: 'QuizQuestionCorrect',\n    component: <QuizQuestionCorrect />,\n    waitAction: true,\n    asMessage: true,\n    trigger: 'NextQuestion',\n  },\n  {\n    id: 'QuizQuestionIncorrect',\n    component: <QuizQuestionIncorrect />,\n    waitAction: true,\n    asMessage: true,\n    trigger: 'NextQuestion',\n  },\n\n  {\n    id: 'QuizEnd',\n    component: <QuizEnd />,\n    asMessage: true,\n    trigger: 'QuizCelebrate',\n  },\n  {\n    id: 'QuizCelebrate',\n    options: [\n      { value: 1, label: 'Celebrate', trigger: 'QuizCelebratePlay' },\n    ],\n  },\n  {\n    id: 'QuizCelebratePlay',\n    component: <QuizCelebratePlay />,\n    trigger: 'HowDidItGo',\n  },\n  {\n    id: 'HowDidItGo',\n    message: 'How d\\'you feel that quiz went?',\n    trigger: 'HowDidItGoOptions',\n  },\n  {\n    id: 'HowDidItGoOptions',\n    options: [\n      { value: 1, label: 'Great', trigger: 'Why' },\n      { value: 2, label: 'Meh', trigger: 'Why' },\n      { value: 3, label: 'Terribly', trigger: 'Why' },\n    ],\n  },\n  {\n    id: 'Why',\n    message: 'Mind telling us a bit more?',\n    trigger: 'WhyResponse',\n  },\n  {\n    id: 'WhyResponse',\n    user: true,\n    trigger: 'FeedbackThanks',\n  },\n  {\n    id: 'FeedbackThanks',\n    message: 'Thanks for sharing!',\n    trigger: 'QuizGoAgain',\n  },\n  {\n    id: 'QuizGoAgain',\n    message: 'Ready to to again?',\n    trigger: 'QuizGoAgainOptions',\n  },\n  {\n    id: 'QuizGoAgainOptions',\n    options: [\n      { value: 1, label: 'Hit me with some questions', trigger: 'QuizReadyAgain' },\n      { value: 2, label: 'Take me home', trigger: 'WhatToDoNowQuestion' },\n    ],\n  },\n]\n\nconst steps = [\n  {\n    id: 'GreetingNameQuestion',\n    message: 'Welcome to the Bitesize chat bot! What is your name?',\n    trigger: 'GreetingNameResponse',\n  },\n  {\n    id: 'GreetingNameResponse',\n    user: true,\n    trigger: 'WhatToDoQuestion',\n  },\n  {\n    id: 'WhatToDoQuestion',\n    message: 'Hi {previousValue}, nice to meet you! What d\\'you want to do today?',\n    trigger: 'WhatToDoQuestionOptions',\n  },\n  {\n    id: 'WhatToDoNowQuestion',\n    message: 'What d\\'you want to do now?',\n    trigger: 'WhatToDoQuestionOptions',\n  },\n  {\n    id: 'WhatToDoQuestionOptions',\n    options: [\n      { value: 1, label: 'Find a study guide', trigger: 'GuideWhatAreYouStudying' },\n      { value: 2, label: 'Do a quiz', trigger: 'QuizWhatAreYouStudying' },\n    ],\n  },\n  ...guideSteps,\n  ...quizSteps,\n];\n\nexport default ({}) => {\n  const { width, height } = useWindowSize();\n  console.log(\"RERENDER MAIN\");\n  const [, updateState] = React.useState();\n  forceRenderMain = React.useCallback(() => updateState({}), []);;\n  return (\n    <ThemeProvider theme={theme}>\n      <>\n        { showStudyGuide && <StyledIframe src={showStudyGuide}></StyledIframe> }\n        { showConfetti && (\n          <Confetti\n            width={width}\n            height={height}\n          />\n        )}\n        <ChatBot steps={steps} {...chatbotConfig} />\n      </>\n    </ThemeProvider>\n  )\n}\n","import logo from './logo.svg';\nimport './App.css';\n\nimport ChatBot from './ChatBot';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      <ChatBot />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}